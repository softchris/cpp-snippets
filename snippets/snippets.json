{
  "cpp-dowhile": {
    "prefix": "cpp-dowhile",
    "body" : [
      "bool condition = false;",
      "do ",
      "{",
      "  $1;",
      "}while(condition);"
    ],
    "description" : "declares a do-while loop"
  },
  "cpp-while": {
    "prefix": "cpp-while",
    "body" : [
      "bool condition = false;",
      "while(condition)",
      "{",
      "  $1;",
      "}"
    ],
    "description" : "declares a while loop"
  },
  "cpp-for": {
    "body": [
      "for(int i=0; i <10; i++)",
      "{",
      "  $1",
      "}"
    ],
    "description" : "declares a for loop"
  },
  "cpp-foreach": {
    "body": [
      "int arr[3] = {1,2,3}",
      "for(int i: arr)",
      "{",
      "  $1", 
      "}"
    ],
    "description" : ""
  },
  "cpp-if" : {
    "prefix" : "cpp-if",
    "body" : [
      "bool condition = false;",
      "if(condition)",
      "{",
      "  $1",
      "}"
    ],
    "description": "an if clause"
  },
  "cpp-if-else-if-else" : {
    "prefix" : "cpp-if-else",
    "body" : [
      "bool condition = false;",
      "bool otherCondition = false;",
      "if(condition)",
      "{",
      "  $1",
      "}",
      "else if(otherCondition) {",
      "  $2",
      "}",
      "else {",
      "}"
    ],
    "description": "an if, else-if, else clause"
  },
  "cpp-if-else" : {
    "prefix" : "cpp-if-else",
    "body" : [
      "bool condition = false;",
      "if(condition)",
      "{",
      "  $1",
      "}",
      "else {",
      "}"
    ],
    "description": "an if clause"
  },
  "cpp-class-declare": {
    "body": [
      "class $1",
      "{",
      "  public:",
      "    $1();",
      "  private:",
      "};"
    ],
    "description": "declare a class" 
  },
  "cpp-class-sample": {
    "prefix" : "cpp-class-sample",
    "body": [
      "class Person {",
      "  public:",
      "    Person(string name, int age);",
      "    string toString();",
      "  private:",
      "    string name;",
      "    int age;",
      "};",
      "", 
      "Person::Person(string name, int age)", 
      "{",
      "  this->name = name;",
      "this->age = age;",
      "}",
      "",
      "string Person::toString()", 
      "{",
      "  return \"Person is named \" + this->name + \" and is \" + to_string(this->age) + \"years old\";",
      "}"
     ],
    "description": "declares a class and initializes it"
  },
  "cpp-pointer-allocate" : {
    "prefix": "cpp-pointer-allocate",
    "body": [
      "int * ptr = new int[3]{ 1,2,3};",
      "delete ptr;"
    ],
    "description": "allocates and deallocates memory"
  }
  ,"cpp-pointer-array": {
    "prefix" : "cpp-pointer-array",
    "body": [
      "int array[3] = { 1,2,3 };",
      "int *ptr = array;",
      "cout << *ptr; // prints 1, points to array[0]",
      "for(int i=0; i< 3; i++)",
      "{",
      "   cout << *ptr;",
      "   ptr++",
      "}"
    ],
    "description": "declares and iterates over a pointer"
  },
  "cpp-pointer": {
    "prefix" : "cpp-pointer",
    "body": [
      "int value = 11;",
      "int *ptr = &value;",
      "cout << *ptr; // value",
      "cout << ptr; // memory address"
    ],
    "description": "declares and prints a pointer"
  },
  "cpp-struct-sample": {
    "prefix" : "cpp-struct-declare",
    "body": [
      "struct Order",
      "{",
      "  int id;",
      "  string title;",
      "  string toString()",
      "  {",
      "    return \"Id: \" + to_string(id) + \", Title: \" + title + \n;\"",
      "  }",
      "}",
      "",
      "Order o;",
      "o.id = 1;",
      "o.title = \"My order\";",
      "cout<< o.toString();"
    ],
    "description": "declare a struct and creates an instance"
  },
  "cpp-struct-declare": {
    "prefix" : "cpp-struct-declare",
    "body": [
      "struct Order",
      "{",
      "  int id;",
      "  string title;",
      "  string toString()",
      "  {",
      "    return \"Id: \" + to_string(id) + \", Title: \" + title + \n;\"",
      "  }",
      "}"
    ],
    "description": "declare a struct"
  },
  "cpp-queue-lib": {
    "prefix": "cpp-queue-lib",
    "body": [
      "#include <queue>"
    ],
    "description": "shows how to import a queue"
  },
  "cpp-queue": {
    "prefix": "cpp-queue",
    "body": [
      "queue<int> q;",
      "q.push(2);",
      "q.push(3);",
      "q.push(4);",
      "q.back();",
      "q.front();"
    ],
    "description": "shows how to declare and use a queue"
  },
  "cpp-stack-lib": {
    "prefix": "cpp-stack-lib",
    "body": [
      "#include <stack>"
    ],
    "description": "imports the lib you need for a stack"
  },
  "cpp-stack": {
    "prefix": "cpp-stack",
    "body": [
      "stack<int> s;",
      "s.push(1);",
      "s.push(2);",
      "s.pop();"
    ],
    "description": "how to create a stack"
  },
  "cpp-vector-loop-range": {
    "prefix": "cpp-vector-loop-range",
    "body": [
       "vector<int> v;",
       "v.push_back(1);",
       "for (int i = 0: v)", 
       "{",
       "  cout << i;",
       "}"
    ],
    "description": "in C++ 11, you can use range based for loop"
  },
  "cpp-vector-loop-for": {
    "prefix": "cpp-vector-loop-for",
    "body": [
       "vector<int> v;",
       "v.push_back(1);",
       "for (int i=0; i< v.size(); i++)",
       "{",
       "  cout << v[i]",
       "}"
    ],
    "description": "loops vector with for-loop"
  },
  "cpp-vector-loop-iterator": {
    "prefix": "cpp-vector-loop-iterator",
    "body": [
       "vector<int> v;",
       "v.push_back(1);",
       "for (vector<int>::iterator itr = begin(v); itr != end(v); itr++)",
       "{",
       "  cout << *itr;",
       "}"
    ],
    "description": "loops vector with iterator"
  },
  "cpp-vector": {
    "prefix": "cpp-vector",
    "body": [
     "vector<$1> v;",
     "v.push_pack(1);"
    ],
    "description": "declares vector"
  },
  "cpp-vector-lib": {
    "prefix": "cpp-vector-lib",
    "body": [
     "#include <vector>"
    ],
    "description": "declares vector lib"
  },
  "cpp-function-string": {
    "prefix": "cpp-function-string",
    "body": [
     "string add(string lhs, string rhs)",
     "{",
     "  return lhs + rhs;",
     "}"
    ],
    "description": "declares string function"
  },
  "cpp-function-int": {
    "prefix": "cpp-function-int",
    "body": [
     "int add(int lhs, int rhs)",
     "{",
     "  return lhs + rhs;",
     "}"
    ],
    "description": "declares int function"
  },
  "cpp-function": {
    "prefix": "cpp-function",
    "body": [
     "$1 $2()",
     "{",
     "  $3",
     "  return $1;",
     "}"
    ],
    "description": "declares generic function"
  },
  "cpp-iostream-input-line": {
    "prefix": "cpp-iostream-input-line",
    "body": [
      "string line;",
      "getline(cin, line);"
    ],
    "description": "collects user input line"
  },
  "cpp-iostream-input-multiple": {
    "prefix": "cpp-iostream-input-multiple",
    "body": [
      "int arg, arg2;",
      "cin >> arg >> 2;"
    ],
    "description": "collects multiple user input"
  },
  "cpp-iostream-input": {
    "prefix": "cpp-iostream-input",
    "body": [
      "int arg;",
      "cin >> arg;"
    ],
    "description": "collects user input"
  },
  "cpp-iostream-print": {
    "prefix": "cpp-iostream-print",
    "body": [
      "cout << \"hello\";"
    ],
    "description": "prints string"
  },
  "cpp-app-sample": {
    "prefix": "cpp-app-sample",
    "body": [
      "#include <iostream>",
      "",
      "using namespace std;",
      "",
      "int main()",
      "{",
      "  cout << \"hello\";",
      "  return 0;",
      "}"
    ],
    "description": "adds iostream lib"
  },
  "cpp-namespace-use": {
    "prefix": "cpp-use-namespace",
    "body": [
      "using namespace $1;"
    ],
    "description": "adds namespace"
  },
  "cpp-namespace-std": {
    "prefix": "cpp-use-namespace-std",
    "body": [
      "using namespace std;"
    ],
    "description": "adds std namespace"
  },
  "cpp-lib-string": {
    "prefix": "cpp-lib-string",
    "body": [
      "#include <string>"
    ],
    "description": "adds string lib"
  },
  "cpp-lib-iostream": {
    "prefix": "cpp-lib-iostream",
    "body": [
      "#include <iostream>"
    ],
    "description": "adds iostream lib"
  },
  "cpp-main": {
    "prefix": "cpp-main",
    "body": [
      "int main()",
      "{",
      "  return 0;",
      "}"
    ],
    "description": "adds a main method"
  }
}